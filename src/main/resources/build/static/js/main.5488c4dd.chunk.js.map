{"version":3,"sources":["site/Home.js","site/auth/Login.js","site/App.js","site/auth/Register.js","site/Dyslexia.js","serviceWorker.js","index.js"],"names":["Home","React","Component","Login","props","document","title","state","email","password","invalidEmail","isEmptyEmail","isEmptyPassword","handleChange","bind","handleLogin","handleForgot","event","target","value","type","checked","name","this","setState","preventDefault","test","axios","post","then","result","console","log","catch","error","alert","className","onSubmit","onChange","xmlns","enableBackground","viewBox","fill","height","width","d","onClick","to","Register","Dyslexia","dyslexia","toggleDyslexia","prevState","App","exact","path","component","Child","id","match","params","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5488c4dd.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Home extends React.Component {\n\n    render() {\n        return(\n            <div>\n                <p>\n                    This is the body\n                </p>\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {apiRoute} from \"../App\";\n\nexport class Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        document.title = 'Profielwerkstuk — Login';\n\n        this.state = {\n            email: '',\n            password: '',\n            invalidEmail: false,\n            isEmptyEmail: false,\n            isEmptyPassword: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleForgot = this.handleForgot.bind(this);\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleLogin(event) {\n        event.preventDefault();\n        this.setState({\n            invalidEmail: false,\n            isEmptyEmail: false,\n            isEmptyPassword: false\n        })\n\n        let emailRegEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        let email = this.state.email;\n        let password = this.state.password;\n\n        if (password === '') {\n            this.setState({\n                isEmptyPassword: password === ''\n            });\n        }\n\n        if (email === '') {\n            this.setState({\n                isEmptyEmail: email === '',\n            });\n            return;\n        }\n\n        if (emailRegEX.test(email)) {\n            if (this.state.isEmptyPassword) {\n                return;\n            }\n\n            axios.post(`${apiRoute()}/auth/login`, {email: email, password: password}).then(result => {\n                console.log(result);\n            }).catch(error => {\n                console.error(error);\n            });\n        } else {\n            this.setState({\n                invalidEmail: true\n            })\n        }\n    }\n\n    handleForgot() {\n        alert('Requesting new password');\n    }\n\n    render() {\n        return(\n            <div className=\"min-h-screen bg-gray-100 flex flex-col justify-center sm:py-12\">\n                <div className=\"p-10 xs:p-0 mx-auto md:w-full md:max-w-md\">\n                    <h1 className=\"font-bold text-center text-2xl mb-5\">Profielwerkstuk</h1>\n                    <div className=\"bg-white shadow w-full rounded-lg divide-y divide-gray-200\">\n                        <form onSubmit={this.handleLogin} className=\"px-5 py-7\">\n                            <label className={`font-semibold text-sm ${this.state.isEmptyEmail || this.state.invalidEmail ? 'text-red-500' : 'text-gray-600'} pb-1 block`}>Email<span className=\"italic\">{this.state.isEmptyEmail ? ' — This field is required' : ''}{this.state.invalidEmail ? ' — This is not a valid email' : ''}</span></label>\n                            <input name=\"email\" type=\"text\" value={this.state.email} onChange={this.handleChange} className={`border rounded-lg px-3 py-2 mt-1 mb-5 text-sm w-full ${this.state.isEmptyEmail || this.state.invalidEmail ? 'border-red-500' : ''}`} />\n                            <label className={`font-semibold text-sm ${this.state.isEmptyPassword ? 'text-red-500' : 'text-gray-600'} pb-1 block`}>Password<span className=\"italic\">{this.state.isEmptyPassword ? ' — This field is required' : ''}</span></label>\n                            <input name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleChange} className={`border rounded-lg px-3 py-2 mt-1 mb-5 text-sm w-full ${this.state.isEmptyPassword ? 'border-red-500' : ''}`}/>\n                            <button type=\"submit\" className=\"transition duration-200 bg-blue-500 hover:bg-blue-600 focus:bg-blue-700 focus:shadow-sm focus:ring-4 focus:ring-blue-500 focus:ring-opacity-50 text-white w-full py-2.5 rounded-lg text-sm shadow-sm hover:shadow-md font-semibold text-center inline-block\">\n                                <span className=\"inline-block mr-2\">Login</span>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" viewBox=\"0 0 24 24\" className=\"w-4 h4 inline-block fill-current\">\n                                    <rect fill=\"none\" height=\"24\" width=\"24\"/>\n                                    <path d=\"M15,5l-1.41,1.41L18.17,11H2V13h16.17l-4.59,4.59L15,19l7-7L15,5z\"/>\n                                </svg>\n                            </button>\n                        </form>\n                        <div className=\"py-5\">\n                            <div className=\"grid grid-cols-2 gap-1\">\n                                <div className=\"text-center sm:text-left whitespace-nowrap\">\n                                    <button type=\"button\" onClick={this.handleForgot} className=\"transition duration-200 mx-5 px-5 py-4 cursor-pointer font-normal text-sm rounded-lg text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-200 focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 ring-inset\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"w-4 h4 inline-block align-text-top fill-current\">\n                                            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                                            <path d=\"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z\"/>\n                                        </svg>\n                                        <span className=\"inline-block ml-1\">Forgot Password</span>\n                                    </button>\n                                </div>\n                                <div className=\"text-center sm:text-right  whitespace-nowrap\">\n                                    <Link to=\"/register\">\n                                        <button className=\"transition duration-200 mx-5 px-5 py-4 cursor-pointer font-normal text-sm rounded-lg text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-200 focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 ring-inset\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"w-4 h-4 inline-block align-text-bottom fill-current\">\n                                                <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                                                <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/>\n                                            </svg>\n                                            <span className=\"inline-block ml-1\">Register</span>\n                                        </button>\n                                    </Link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"py-5\">\n                        <div className=\"grid grid-cols-2 gap-1\">\n                            <div className=\"text-center sm:text-left whitespace-nowrap\">\n                                <Link to=\"/\" className=\"transition duration-200 mx-5 px-5 py-4 cursor-pointer font-normal text-sm rounded-lg text-gray-500 hover:bg-gray-200 focus:outline-none focus:bg-gray-300 focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 ring-inset\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" viewBox=\"0 0 24 24\" className=\"w-4 h-4 inline-block align-text-top fill-current\">\n                                        <rect fill=\"none\" height=\"24\" width=\"24\"/><\n                                        path d=\"M9,19l1.41-1.41L5.83,13H22V11H5.83l4.59-4.59L9,5l-7,7L9,19z\"/>\n                                    </svg>\n                                    <span className=\"inline-block ml-1\">Back to Profielwerkstuk</span>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport { Home } from './Home';\nimport { Login, Register } from './auth/Auth';\nimport { Dyslexia } from './Dyslexia';\n\nexport class App extends React.Component {\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/register\" component={Register} />\n\n                    <Route exact path=\"/subjects\" component={Child} />\n                    <Route exact path=\"/subjects/:id\" component={Child} />\n\n                    <Route exact path=\"/subjects/:id/chapters\" component={Child} />\n                    <Route exact path=\"/subjects/:id/chapters/:id\" component={Child} />\n\n                    {/* Dyslexia test */}\n                    <Route path=\"/dyslexia\">\n                        <Dyslexia/>\n                    </Route>\n\n                    <Route path=\"*\">\n                        <div>\n                            <h1>Whoops, I can't find this page!</h1>\n                            <Link to=\"/\">Get back to the home page.</Link>\n                        </div>\n                    </Route>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport function apiRoute() {\n    return 'http://localhost:3000/api/v1'\n}\n\nexport class Child extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: this.props.match.params.id\n        };\n    }\n\n    render() {\n        return (\n            <p>ID: {this.state.id}</p>\n        );\n    }\n\n}\n","import React from 'react';\n\nexport class Register extends React.Component {\n\n    render() {\n        return(\n            <div>\n                <p>\n                    This is the body\n                </p>\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\n\nexport class Dyslexia extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dyslexia: false\n        };\n\n        this.toggleDyslexia = this.toggleDyslexia.bind(this);\n    }\n\n    toggleDyslexia() {\n        this.setState(prevState => ({\n            dyslexia: !prevState.dyslexia\n        }));\n    }\n\n    render() {\n        return(\n            <div>\n                <p className={this.state.dyslexia ? 'dyslexia-font' : ''}>\n                    Test I am testing very much\n                </p>\n\n                <button onClick={ this.toggleDyslexia }>\n                    Toggle dyslexia\n                </button>\n            </div>\n        );\n    }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './site/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}